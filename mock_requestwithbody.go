// Code generated by mockery. DO NOT EDIT.

package httpoh

import (
	io "io"

	mock "github.com/stretchr/testify/mock"
)

// MockRequestWithBody is an autogenerated mock type for the RequestWithBody type
type MockRequestWithBody struct {
	mock.Mock
}

type MockRequestWithBody_Expecter struct {
	mock *mock.Mock
}

func (_m *MockRequestWithBody) EXPECT() *MockRequestWithBody_Expecter {
	return &MockRequestWithBody_Expecter{mock: &_m.Mock}
}

// Body provides a mock function with given fields:
func (_m *MockRequestWithBody) Body() io.Reader {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for Body")
	}

	var r0 io.Reader
	if rf, ok := ret.Get(0).(func() io.Reader); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(io.Reader)
		}
	}

	return r0
}

// MockRequestWithBody_Body_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Body'
type MockRequestWithBody_Body_Call struct {
	*mock.Call
}

// Body is a helper method to define mock.On call
func (_e *MockRequestWithBody_Expecter) Body() *MockRequestWithBody_Body_Call {
	return &MockRequestWithBody_Body_Call{Call: _e.mock.On("Body")}
}

func (_c *MockRequestWithBody_Body_Call) Run(run func()) *MockRequestWithBody_Body_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockRequestWithBody_Body_Call) Return(_a0 io.Reader) *MockRequestWithBody_Body_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockRequestWithBody_Body_Call) RunAndReturn(run func() io.Reader) *MockRequestWithBody_Body_Call {
	_c.Call.Return(run)
	return _c
}

// Method provides a mock function with given fields:
func (_m *MockRequestWithBody) Method() string {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for Method")
	}

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// MockRequestWithBody_Method_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Method'
type MockRequestWithBody_Method_Call struct {
	*mock.Call
}

// Method is a helper method to define mock.On call
func (_e *MockRequestWithBody_Expecter) Method() *MockRequestWithBody_Method_Call {
	return &MockRequestWithBody_Method_Call{Call: _e.mock.On("Method")}
}

func (_c *MockRequestWithBody_Method_Call) Run(run func()) *MockRequestWithBody_Method_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockRequestWithBody_Method_Call) Return(_a0 string) *MockRequestWithBody_Method_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockRequestWithBody_Method_Call) RunAndReturn(run func() string) *MockRequestWithBody_Method_Call {
	_c.Call.Return(run)
	return _c
}

// URL provides a mock function with given fields:
func (_m *MockRequestWithBody) URL() string {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for URL")
	}

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// MockRequestWithBody_URL_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'URL'
type MockRequestWithBody_URL_Call struct {
	*mock.Call
}

// URL is a helper method to define mock.On call
func (_e *MockRequestWithBody_Expecter) URL() *MockRequestWithBody_URL_Call {
	return &MockRequestWithBody_URL_Call{Call: _e.mock.On("URL")}
}

func (_c *MockRequestWithBody_URL_Call) Run(run func()) *MockRequestWithBody_URL_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockRequestWithBody_URL_Call) Return(_a0 string) *MockRequestWithBody_URL_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockRequestWithBody_URL_Call) RunAndReturn(run func() string) *MockRequestWithBody_URL_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockRequestWithBody creates a new instance of MockRequestWithBody. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockRequestWithBody(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockRequestWithBody {
	mock := &MockRequestWithBody{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
