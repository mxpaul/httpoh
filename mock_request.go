// Code generated by mockery. DO NOT EDIT.

package httpoh

import mock "github.com/stretchr/testify/mock"

// MockRequest is an autogenerated mock type for the Request type
type MockRequest struct {
	mock.Mock
}

type MockRequest_Expecter struct {
	mock *mock.Mock
}

func (_m *MockRequest) EXPECT() *MockRequest_Expecter {
	return &MockRequest_Expecter{mock: &_m.Mock}
}

// Method provides a mock function with given fields:
func (_m *MockRequest) Method() string {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for Method")
	}

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// MockRequest_Method_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Method'
type MockRequest_Method_Call struct {
	*mock.Call
}

// Method is a helper method to define mock.On call
func (_e *MockRequest_Expecter) Method() *MockRequest_Method_Call {
	return &MockRequest_Method_Call{Call: _e.mock.On("Method")}
}

func (_c *MockRequest_Method_Call) Run(run func()) *MockRequest_Method_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockRequest_Method_Call) Return(_a0 string) *MockRequest_Method_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockRequest_Method_Call) RunAndReturn(run func() string) *MockRequest_Method_Call {
	_c.Call.Return(run)
	return _c
}

// URL provides a mock function with given fields:
func (_m *MockRequest) URL() string {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for URL")
	}

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// MockRequest_URL_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'URL'
type MockRequest_URL_Call struct {
	*mock.Call
}

// URL is a helper method to define mock.On call
func (_e *MockRequest_Expecter) URL() *MockRequest_URL_Call {
	return &MockRequest_URL_Call{Call: _e.mock.On("URL")}
}

func (_c *MockRequest_URL_Call) Run(run func()) *MockRequest_URL_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockRequest_URL_Call) Return(_a0 string) *MockRequest_URL_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockRequest_URL_Call) RunAndReturn(run func() string) *MockRequest_URL_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockRequest creates a new instance of MockRequest. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockRequest(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockRequest {
	mock := &MockRequest{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
